function [y1] = myNeuralNetworkFunction(x1)
%MYNEURALNETWORKFUNCTION neural network simulation function.
%
% Generated by Neural Network Toolbox function genFunction, 30-Apr-2016 00:16:11.
% 
% [y1] = myNeuralNetworkFunction(x1) takes these arguments:
%   x = 13xQ matrix, input #1
% and returns:
%   y = 1xQ matrix, output #1
% where Q is the number of samples.

%#ok<*RPMT0>

  % ===== NEURAL NETWORK CONSTANTS =====
  
  % Input 1
  x1_step1_xoffset = [734504;1;0;1;0;0;0;0;1;0.02;0;0;0];
  x1_step1_gain = [0.00273972602739726;0.666666666666667;2;0.181818181818182;0.0869565217391304;2;0.333333333333333;2;0.666666666666667;2.04081632653061;2;2;2.35100505466087];
  x1_step1_ymin = -1;
  
  % Layer 1
  b1 = [-4.6960861464943067;22.581768756302669;2.022676990272092;0.46513248827550824;3.9714299411444136;12.856055406757591;-0.16125182378806419;-36.717923904739024;0.10643197680275543;16.302579167632551];
  IW1_1 = [0.085167736237168057 0.088988820468890964 0.1222380840625522 -0.040231120108758657 -3.3638388428567505 -3.2560755774620884 -0.025354475341090872 3.2467481651246328 -0.14823020431485825 0.47279155163520931 0.21309693053077303 -0.11007427441442164 -0.056448962430333476;0.68098356320280873 -0.10818751153616375 -0.37981828088776703 -0.21614812313151199 1.8911411085332213 0.28418357430476565 0.0023441951535389202 22.980458022462383 0.11590924208340089 -0.42318875593666538 -0.28755648845335657 0.085950052908406224 0.10070608548537482;-0.97093575991135583 -0.2981438459900827 -11.244745223161457 0.58585763155683612 -19.418441321232155 -13.069576743640516 -0.040087405220921274 4.8500673191235464 0.13525988330150968 -0.54252088072476767 0.31775514961861201 0.18344918359716836 0.0037325428261420074;-0.17351007183302458 -0.11350821913399775 -0.20672457579234643 0.08173168166086453 -2.3191069884679467 0.0041245136014673792 -0.09856790791748897 -0.4320621936871209 0.15305764258056967 -0.18164283071376158 -0.1380942084104054 0.052301065588582558 0.04539081664752067;-0.1698564366454208 -0.093059090909584141 -10.216204723368525 -0.029070363764543434 -9.5069877070730868 6.5872082588235266 -0.013965444388807096 -10.948872403252635 0.32785109793226791 -0.44551891327147847 -0.12715711189144518 -0.079966187741446884 0.049023653987422262;-0.45178246822651291 0.16686549725509353 5.854824912228163 0.13918753001375844 13.220472990459202 9.0382467145382304 0.0029561676244886101 -4.1626975530933121 -0.12339875768130852 -0.33091239605789136 0.43537332113760152 0.10897028226310174 -0.010747297753674487;-1.4224966035059483 0.46920602022431007 0.68101081021080834 0.054978508338913511 0.31507950630791864 3.8688315324067539 0.021331965479602217 -0.32803088104402961 -0.1239165965137633 4.7566260146634738 -0.30915127860005026 0.73305841632016533 -0.20093540983157446;-0.070888709492326826 -0.047414349917716835 -20.835580653707073 0.054284386134871035 -19.778217346645366 -24.244858070565957 0.0058568559637010888 -13.002623887073197 0.052868619569866632 -0.47829127193511739 0.42342269172373848 -0.086961124328434947 -0.02842565326059119;-2.0234971292541908 0.17106105112033088 10.745804397912281 0.81105688795079856 -19.490312152973072 -15.417960274028399 0.030291169395124506 -0.85118706315627313 -0.18398065634732297 0.13629332281528089 0.44517183103857244 0.069654618246321853 -0.055321432033590162;-1.0587967187861582 0.017844057685923967 -5.5563330629963064 0.45830605562975207 -26.032936614257473 14.566700652120927 0.020558040426482144 -1.6518951999988698 -0.059316839776016594 -0.11140166534158434 0.19653340529172922 0.040249941895728544 -0.052432986046793965];
  
  % Layer 2
  b2 = 0.055061973154674995;
  LW2_1 = [0.91998361408008533 -0.95855867555060359 -0.5702484362409711 -0.45895848907069925 -0.43465693766266822 0.44485844208506214 -0.52548731667022508 0.4462469923526054 -0.56947996710877724 0.50023344646211232];
  
  % Output 1
  y1_step1_ymin = -1;
  y1_step1_gain = 0.00204918032786885;
  y1_step1_xoffset = 1;
  
  % ===== SIMULATION ========
  
  % Dimensions
  Q = size(x1,2); % samples
  
  % Input 1
  xp1 = mapminmax_apply(x1,x1_step1_gain,x1_step1_xoffset,x1_step1_ymin);
  
  % Layer 1
  a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*xp1);
  
  % Layer 2
  a2 = repmat(b2,1,Q) + LW2_1*a1;
  
  % Output 1
  y1 = mapminmax_reverse(a2,y1_step1_gain,y1_step1_xoffset,y1_step1_ymin);
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings_gain,settings_xoffset,settings_ymin)
  y = bsxfun(@minus,x,settings_xoffset);
  y = bsxfun(@times,y,settings_gain);
  y = bsxfun(@plus,y,settings_ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings_gain,settings_xoffset,settings_ymin)
  x = bsxfun(@minus,y,settings_ymin);
  x = bsxfun(@rdivide,x,settings_gain);
  x = bsxfun(@plus,x,settings_xoffset);
end
